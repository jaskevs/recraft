services:
  postgres:
    container_name: recraft-space-postgres
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-directus}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-directus}
      POSTGRES_DB: ${POSTGRES_DB:-directus}
      TZ: ${TZ:-Australia/Melbourne}
    ports:
      - "${POSTGRES_HOST_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-directus}"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  directus:
    container_name: recraft-space-directus
    image: recraft-space-directus:local
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      KEY: ${KEY:-local-key-change-me-32chars-min}
      SECRET: ${SECRET:-local-secret-change-me-32chars-min}
      ADMIN_EMAIL: ${ADMIN_EMAIL:-admin@example.com}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD:-General@7}
      # Directus will use DATABASE_URL if provided (for Render), otherwise fall back to individual vars
      DATABASE_URL: ${DATABASE_URL:-}
      DB_CLIENT: postgres
      DB_HOST: ${DB_HOST:-postgres}
      DB_PORT: ${DB_PORT:-5432}
      DB_DATABASE: ${POSTGRES_DB:-directus}
      DB_USER: ${POSTGRES_USER:-directus}
      DB_PASSWORD: ${POSTGRES_PASSWORD:-directus}
      PUBLIC_URL: ${PUBLIC_URL:-http://localhost:8055}
      CORS_ENABLED: ${CORS_ENABLED:-true}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:3000,http://localhost:5173,http://localhost:4444}
      STORAGE_LOCATIONS: local
      STORAGE_LOCAL_DRIVER: local
      STORAGE_LOCAL_ROOT: /directus/uploads
      STORAGE_LOCAL_PUBLIC_URL: /uploads
      TZ: ${TZ:-Australia/Melbourne}
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "${DIRECTUS_HOST_PORT:-8055}:8055"
    volumes:
      - directus_uploads:/directus/uploads
      - directus_extensions:/directus/extensions
      - directus_snapshots:/directus/snapshots
    healthcheck:
      test: ["CMD", "node", "-e", "fetch('http://localhost:8055/server/health').then(r=>process.exit(r.ok?0:1)).catch(()=>process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped

volumes:
  postgres_data:
  directus_uploads:
  directus_extensions:
  directus_snapshots:
