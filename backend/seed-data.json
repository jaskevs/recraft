{
  "posts": [
    {
      "id": "a1b2c3d4-e5f6-7890-abcd-ef1234567890",
      "status": "published",
      "sort": 1,
      "user_created": null,
      "date_created": "2024-01-15T10:00:00Z",
      "user_updated": null,
      "date_updated": "2024-01-15T10:00:00Z",
      "title": "Welcome to reCraft Blog",
      "slug": "welcome-to-recraft-blog",
      "excerpt": "Introducing our new tech blog platform built with modern technologies.",
      "content": "<p>Welcome to <strong>reCraft Blog</strong>, a modern blogging platform designed for tech enthusiasts and developers.</p>\n\n<h2>What is reCraft?</h2>\n<p>reCraft is a headless CMS-powered blog built with cutting-edge technologies:</p>\n<ul>\n<li>Directus for content management</li>\n<li>Remix for the frontend framework</li>\n<li>PostgreSQL for reliable data storage</li>\n<li>Docker for easy deployment</li>\n</ul>\n\n<h2>Features</h2>\n<p>Our platform offers:</p>\n<ul>\n<li>Clean, modern design</li>\n<li>Fast performance with server-side rendering</li>\n<li>Flexible content management</li>\n<li>SEO optimization</li>\n</ul>\n\n<p>Stay tuned for more technical articles and tutorials!</p>",
      "featured_image": null,
      "meta_title": "Welcome to reCraft Blog - Modern Tech Blogging Platform",
      "meta_description": "Introducing reCraft Blog, a modern tech blogging platform built with Directus, Remix, and PostgreSQL.",
      "meta_keywords": "reCraft, blog, tech, Directus, Remix, PostgreSQL"
    },
    {
      "id": "b2c3d4e5-f6a7-8901-bcde-f12345678901",
      "status": "published",
      "sort": 2,
      "user_created": null,
      "date_created": "2024-01-20T14:30:00Z",
      "user_updated": null,
      "date_updated": "2024-01-20T14:30:00Z",
      "title": "Getting Started with Directus and PostgreSQL",
      "slug": "getting-started-directus-postgresql",
      "excerpt": "Learn how to set up Directus with PostgreSQL for your next project.",
      "content": "<p>Directus is a powerful open-source headless CMS that works seamlessly with PostgreSQL. In this guide, we'll walk through the setup process.</p>\n\n<h2>Why PostgreSQL?</h2>\n<p>PostgreSQL offers several advantages:</p>\n<ul>\n<li>ACID compliance for data integrity</li>\n<li>Advanced indexing capabilities</li>\n<li>JSON/JSONB support for flexible data structures</li>\n<li>Excellent performance at scale</li>\n</ul>\n\n<h2>Setting Up with Docker</h2>\n<p>The easiest way to get started is using Docker Compose:</p>\n<pre><code>version: '3.8'\nservices:\n  postgres:\n    image: postgres:16-alpine\n    environment:\n      POSTGRES_USER: directus\n      POSTGRES_PASSWORD: directus\n      POSTGRES_DB: directus\n  directus:\n    image: directus/directus:latest\n    environment:\n      DATABASE_URL: postgres://directus:directus@postgres:5432/directus\n</code></pre>\n\n<h2>Configuration Tips</h2>\n<p>Remember to:</p>\n<ul>\n<li>Use environment variables for sensitive data</li>\n<li>Set up proper health checks</li>\n<li>Configure CORS for your frontend application</li>\n<li>Enable SSL in production</li>\n</ul>\n\n<p>Happy coding!</p>",
      "featured_image": null,
      "meta_title": "Getting Started with Directus and PostgreSQL - reCraft Blog",
      "meta_description": "A comprehensive guide to setting up Directus with PostgreSQL using Docker for modern web applications.",
      "meta_keywords": "Directus, PostgreSQL, Docker, CMS, tutorial"
    },
    {
      "id": "c3d4e5f6-a7b8-9012-cdef-123456789012",
      "status": "published",
      "sort": 3,
      "user_created": null,
      "date_created": "2024-01-25T09:15:00Z",
      "user_updated": null,
      "date_updated": "2024-01-25T09:15:00Z",
      "title": "Building Fast Web Apps with Remix",
      "slug": "building-fast-web-apps-remix",
      "excerpt": "Discover how Remix can help you build blazing-fast web applications with excellent developer experience.",
      "content": "<p>Remix is a full-stack web framework that leverages React's power while providing excellent performance out of the box.</p>\n\n<h2>Key Features</h2>\n<p>What makes Remix special:</p>\n<ul>\n<li>Server-side rendering by default</li>\n<li>Progressive enhancement</li>\n<li>Built-in data loading patterns</li>\n<li>Nested routing with layouts</li>\n<li>Excellent error handling</li>\n</ul>\n\n<h2>Performance Benefits</h2>\n<p>Remix optimizes performance through:</p>\n<ul>\n<li>Parallel data loading</li>\n<li>Automatic code splitting</li>\n<li>Prefetching on hover/focus</li>\n<li>Optimistic UI updates</li>\n</ul>\n\n<h2>Example Route</h2>\n<pre><code>export async function loader({ params }) {\n  const post = await getPost(params.slug);\n  return json({ post });\n}\n\nexport default function Post() {\n  const { post } = useLoaderData();\n  return (\n    &lt;article&gt;\n      &lt;h1&gt;{post.title}&lt;/h1&gt;\n      &lt;div&gt;{post.content}&lt;/div&gt;\n    &lt;/article&gt;\n  );\n}</code></pre>\n\n<p>Start building faster web apps today with Remix!</p>",
      "featured_image": null,
      "meta_title": "Building Fast Web Apps with Remix - reCraft Blog",
      "meta_description": "Learn how to build high-performance web applications using Remix framework with server-side rendering and optimized data loading.",
      "meta_keywords": "Remix, React, SSR, web performance, framework"
    }
  ]
}